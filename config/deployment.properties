# SailPoint IIQ Deployment Configuration for Accessio RACF Connector
# This file contains deployment-specific settings for different environments

# Deployment Information
deployment.name=Accessio RACF Connector
deployment.version=1.0.0
deployment.date=${DEPLOYMENT_DATE}
deployment.environment=${ENVIRONMENT:development}

# SailPoint IIQ Environment Configuration
iiq.server.url=${IIQ_SERVER_URL:http://localhost:8080/identityiq}
iiq.deployment.path=${IIQ_DEPLOYMENT_PATH:/opt/sailpoint/identityiq}
iiq.webapp.path=${IIQ_WEBAPP_PATH:/opt/sailpoint/identityiq/WEB-INF}
iiq.lib.path=${IIQ_LIB_PATH:/opt/sailpoint/identityiq/WEB-INF/lib}
iiq.config.path=${IIQ_CONFIG_PATH:/opt/sailpoint/identityiq/WEB-INF/config}

# Database Configuration
iiq.database.url=${IIQ_DATABASE_URL:jdbc:mysql://localhost:3306/identityiq}
iiq.database.username=${IIQ_DATABASE_USERNAME:identityiq}
iiq.database.password=${IIQ_DATABASE_PASSWORD:identityiq}
iiq.database.driver=${IIQ_DATABASE_DRIVER:com.mysql.cj.jdbc.Driver}

# Connector Deployment Configuration
connector.jar.name=accessio-racf-connector-1.0.0.jar
connector.deployment.path=${CONNECTOR_DEPLOYMENT_PATH:/opt/sailpoint/identityiq/WEB-INF/lib}
connector.config.path=${CONNECTOR_CONFIG_PATH:/opt/sailpoint/identityiq/WEB-INF/config/custom}

# Application Import Configuration
application.import.enabled=${APPLICATION_IMPORT_ENABLED:true}
application.xml.path=src/main/resources/applications/AccessioRACF.xml

# Workflow Import Configuration
workflow.import.enabled=${WORKFLOW_IMPORT_ENABLED:true}
workflow.xml.path=src/main/resources/workflows/

# Rule Import Configuration
rule.import.enabled=${RULE_IMPORT_ENABLED:true}
rule.xml.path=src/main/resources/rules/

# Policy Import Configuration
policy.import.enabled=${POLICY_IMPORT_ENABLED:true}
policy.xml.path=src/main/resources/policies/

# Task Import Configuration
task.import.enabled=${TASK_IMPORT_ENABLED:true}
task.xml.path=src/main/resources/tasks/

# Import Order (critical for dependencies)
import.order=1:rules,2:applications,3:policies,4:workflows,5:tasks

# Pre-deployment Validation
validation.enabled=${VALIDATION_ENABLED:true}
validation.check.dependencies=true
validation.check.syntax=true
validation.check.references=true

# Post-deployment Configuration
post.deployment.test.enabled=${POST_DEPLOYMENT_TEST_ENABLED:true}
post.deployment.aggregation.enabled=${POST_DEPLOYMENT_AGGREGATION_ENABLED:false}
post.deployment.notification.enabled=${POST_DEPLOYMENT_NOTIFICATION_ENABLED:true}

# Backup Configuration
backup.before.deployment=${BACKUP_BEFORE_DEPLOYMENT:true}
backup.path=${BACKUP_PATH:/opt/sailpoint/backups}
backup.include.database=${BACKUP_INCLUDE_DATABASE:true}
backup.include.config=${BACKUP_INCLUDE_CONFIG:true}

# Rollback Configuration
rollback.enabled=${ROLLBACK_ENABLED:true}
rollback.backup.retention.days=${ROLLBACK_BACKUP_RETENTION:30}

# Environment-Specific Overrides

# Development Environment
dev.iiq.server.url=http://localhost:8080/identityiq
dev.database.url=jdbc:mysql://localhost:3306/identityiq_dev
dev.validation.strict=false
dev.post.deployment.test.enabled=true
dev.backup.before.deployment=false

# Test Environment
test.iiq.server.url=http://test-iiq.accessio.com:8080/identityiq
test.database.url=jdbc:mysql://test-db.accessio.com:3306/identityiq_test
test.validation.strict=true
test.post.deployment.test.enabled=true
test.backup.before.deployment=true

# Staging Environment
staging.iiq.server.url=http://staging-iiq.accessio.com:8080/identityiq
staging.database.url=jdbc:mysql://staging-db.accessio.com:3306/identityiq_staging
staging.validation.strict=true
staging.post.deployment.test.enabled=true
staging.backup.before.deployment=true

# Production Environment
prod.iiq.server.url=https://iiq.accessio.com/identityiq
prod.database.url=jdbc:mysql://prod-db.accessio.com:3306/identityiq_prod
prod.validation.strict=true
prod.post.deployment.test.enabled=false
prod.backup.before.deployment=true
prod.rollback.enabled=true

# Security Configuration
deployment.security.enabled=${DEPLOYMENT_SECURITY_ENABLED:true}
deployment.ssl.enabled=${DEPLOYMENT_SSL_ENABLED:true}
deployment.authentication.required=${DEPLOYMENT_AUTH_REQUIRED:true}

# Monitoring Configuration
deployment.monitoring.enabled=${DEPLOYMENT_MONITORING_ENABLED:true}
deployment.health.check.enabled=${DEPLOYMENT_HEALTH_CHECK_ENABLED:true}
deployment.metrics.enabled=${DEPLOYMENT_METRICS_ENABLED:true}

# Notification Configuration
notification.deployment.start=${NOTIFICATION_DEPLOYMENT_START:true}
notification.deployment.success=${NOTIFICATION_DEPLOYMENT_SUCCESS:true}
notification.deployment.failure=${NOTIFICATION_DEPLOYMENT_FAILURE:true}
notification.recipients=${NOTIFICATION_RECIPIENTS:sailpoint-admins@accessio.com}

# Maintenance Window Configuration
maintenance.window.enabled=${MAINTENANCE_WINDOW_ENABLED:false}
maintenance.window.start=${MAINTENANCE_WINDOW_START:02:00}
maintenance.window.end=${MAINTENANCE_WINDOW_END:04:00}
maintenance.window.timezone=${MAINTENANCE_WINDOW_TIMEZONE:UTC}

# Performance Configuration
deployment.timeout.minutes=${DEPLOYMENT_TIMEOUT_MINUTES:30}
deployment.retry.attempts=${DEPLOYMENT_RETRY_ATTEMPTS:3}
deployment.parallel.enabled=${DEPLOYMENT_PARALLEL_ENABLED:false}

# Logging Configuration
deployment.logging.enabled=${DEPLOYMENT_LOGGING_ENABLED:true}
deployment.logging.level=${DEPLOYMENT_LOGGING_LEVEL:INFO}
deployment.logging.file=${DEPLOYMENT_LOGGING_FILE:logs/deployment.log}

# Custom Configuration Files
custom.config.files=${CUSTOM_CONFIG_FILES:}
custom.lib.files=${CUSTOM_LIB_FILES:}
custom.script.files=${CUSTOM_SCRIPT_FILES:}
